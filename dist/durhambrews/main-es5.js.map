{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","HomeComponent","_http","sanitizer","formBuilder","breweries","Array","cityZipForm","group","zip","type","Number","window","navigator","geolocation","getCurrentPosition","position","getZipInfo","coords","latitude","longitude","subscribe","data","fetchBrewery","JSON","parse","stringify","error","console","log","message","cityData","getBreweries","forEach","element","getMap","string_char","base64string","btoa","imageURL","bypassSecurityTrustUrl","postal_code","slice","name","map","document","getElementById","style","display","cityZip","value","reset","getZip","findMe","template","HttpService","http","get","lat","long","providedIn","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent} from \"./home/home.component\";\n\n\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Durham Brews';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow p-3\">\n  <h1 style='margin:auto; color:whitesmoke'><img src=\"/assets/img/beerGlass.png\" style=\"margin-right:3px; margin-bottom:5px\" alt=\"beer glass\">{{title}}</h1>\n</nav>\n<app-home></app-home>\n\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n\n\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport {HttpService} from '../http.service';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { FormBuilder, FormsModule } from '@angular/forms'\n\n\n\n@Component({\n  selector: 'app-home',\n  template: `\n  <div class='bg'>\n    <div class=\"jumbotron shadow-lg p-3\">\n      <h2 class=\"display-3\">Local Breweries</h2><br/>\n    </div>\n    <div>\n    <div class=\" zip-form\">\n      <form class=\"form-inline rounded\" [formGroup]=\"cityZipForm\" (ngSubmit)=\"getZip()\" style=\"background-color:#dae3e3; margin-right:35%; margin-bottom:10px; margin-left:35%; padding:25px; border:2px solid black\">\n        <label for=\"cityZipInput\" style=\"margin:auto; font-weight:400\">\n          SEARCH BY ZIP CODE: <input type=\"number\" class=\"form-control rounded\" name=\"cityZipInput\" id='cityZipInput' formControlName=\"zip\" style=\"border:2px solid black; margin-left:3px\">\n        </label>\n        <button class=\"btn btn-outline-primary shadow p-3 rounded\" id=\"zipBtn\" style=\"margin:auto; padding-left:5px\" type=\"submit\" [disabled]=\"!cityZipForm.valid\">Submit</button>\n      </form>\n    </div>\n    <h4 style=\"text-align:center; margin-top:10px\">OR</h4>\n    <div>\n      <button class = \"btn btn-outline-primary shadow p-3 rounded\" id='findUserButton'style=\" margin-top:10px; margin-left:44%; margin-bottom:10px\" (click)=\"findMe()\">Find locations near me!</button>\n      <h6 style=\"margin-top: 10px; margin-left:25%\"> Not seeing any breweries? There may not be any near you, try searching another zip code</h6>\n    </div>\n    <div class=\"container float-right\" >\n      <div class=\"card text-white bg-dark w-50\" style=\"margin-top:10px;margin-bottom:10px\" *ngFor=\"let brewery of breweries\">\n          <h3 class=\"card-header text-center\" style=\"margin:auto\"><img src=\"/assets/img/beerGlass.png\" style=\"width:30px;height:30px;\" alt=\"beer glass\"> {{brewery.name}}</h3>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" *ngIf='brewery.street != \"\"; else elseBlock'>{{brewery.street}}</h5>\n            <ng-template #elseBlock>ADDRESS INFORMATION IS NOT AVAILABLE</ng-template>\n            <h6 class=\"card-subtitle\" *ngIf='brewery.street != \"\"'>{{brewery.city}}, {{brewery.postal_code}}</h6><br/>\n            <svg  id=\"mapMarkerImage\" style=\"vertical-align:center;\"width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" class=\"bi bi-geo-alt\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"showMap(brewery.id)\" *ngIf='brewery.longitude && brewery.latitude != null'>\n              <path fill-rule=\"evenodd\" d=\"M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n            </svg>\n            <span id='spanClick'(click)=\"showMap(brewery.id)\" *ngIf=\"brewery.longitude && brewery.latitude !=null\">show/hide map</span>\n            <br/>\n            <br/>\n          <div *ngIf=\"brewery.longitude !=null; else mapElse\">\n            <img [src]=\"brewery.imageURL\" class=\"rounded\" id=\"{{brewery.id}}\" style=\"display:none; margin:auto;\" alt=\"brewery location on map\" >\n          </div>\n          <ng-template #mapElse>MAP INFORMATION IS NOT AVAILABLE</ng-template><br/><br/>\n          <a href=\"{{brewery.website_url}}\" target=\"_blank\">Visit Website</a>\n        </div>\n    </div>\n</div>\n  `,\n  styleUrls: ['../../../node_modules/bootstrap/dist/css/bootstrap.css']\n})\nexport class HomeComponent implements OnInit {\n\n  breweries= new Array();\n  cityZip;\n  cityZipForm;\n\n  constructor(\n    public _http: HttpService,\n    private sanitizer: DomSanitizer,\n    private formBuilder: FormBuilder) {\n    this.cityZipForm = this.formBuilder.group({\n      zip: {type: Number}\n    })\n   }\n\n  ngOnInit(): void {\n\n  }\n\n  findMe(){\n    window.navigator.geolocation.getCurrentPosition((position) => {\n      this._http.getZipInfo(position.coords.latitude, position.coords.longitude).subscribe(data => {\n        this.fetchBrewery(JSON.parse(JSON.stringify(data)))\n      })\n    }, (error) => {\n      console.log(error.message)\n    })\n  }\n\n//send GET request to OpenBrewery DB and store response in breweries\n  fetchBrewery(cityData?:string){\n    this._http.getBreweries(cityData).subscribe(data => {\n      //parse response data and store into breweries\n      this.breweries = JSON.parse(JSON.stringify(data))\n      this.breweries.forEach(element => {\n        //Get request to LocationIQ\n        this._http.getMap(element.latitude,element.longitude).subscribe(data => {\n          //convert string_char response into base64string to covert into data URL\n          let string_char = JSON.parse(JSON.stringify(data))\n          let base64string = btoa(string_char)\n          //implement domSanitizer to mark data URL as safe\n          element.imageURL = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64,' + base64string)\n        })\n        element.postal_code = element.postal_code.slice(\"0\",-5)\n      })\n    })\n  }\n//show map on user interaction\n  showMap(name: string){\n    let map = document.getElementById(name);\n    if(map.style.display === \"none\"){\n      map.style.display=\"block\"\n    } else {\n      map.style.display=\"none\"\n    }\n  }\n\n//send new GET request to OpenBrewery DB\n   getZip(){\n    this.cityZip = this.cityZipForm.value.zip\n    this.fetchBrewery(this.cityZip)\n    this.cityZipForm.reset()\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  // create http get request to Open Brewery\n  getBreweries(cityZip?:string){\n\n    return this.http.get(`https://api.openbrewerydb.org/breweries?by_postal=${cityZip}`)\n  }\n\n  getZipInfo(lat,long){\n    return this.http.get(`http://localhost:8000/api/getZip?lat=${lat}&long=${long}`)\n  }\n\n  getMap(lat,long){\n    return this.http.get(`http://localhost:8000/api/getMap?lat=${lat}&long=${long}`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}